import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import Alignment, Font, Border, Side
from openpyxl.utils.dataframe import dataframe_to_rows
from openpyxl.worksheet.filters import AutoFilter

# Sample DataFrame
df = pd.DataFrame({
    'Column1': [10, 20, 30],
    'Column2': [40, 50, 60]
})

# Filepath to the Excel file (existing or new)
file_path = 'sample_file.xlsx'
sheet_name = 'MySheet'

# Write DataFrame to an existing sheet or a new one
def save_df_with_formatting(df, file_path, sheet_name):
    try:
        # Try to open an existing workbook
        book = load_workbook(file_path)
    except FileNotFoundError:
        # If the file doesn't exist, create a new one
        book = None

    # Create ExcelWriter object using openpyxl engine
    with pd.ExcelWriter(file_path, engine='openpyxl') as writer:
        if book:
            writer.book = book
            # Remove existing sheet if present
            if sheet_name in book.sheetnames:
                del book[sheet_name]
        # Write DataFrame to the specified sheet
        df.to_excel(writer, sheet_name=sheet_name, index=False)
    
    # Open the workbook to modify formatting
    workbook = load_workbook(file_path)
    sheet = workbook[sheet_name]
    
    # Apply left alignment and formatting
    alignment = Alignment(horizontal="left")
    header_font = Font(bold=True)

    # Define underline for the bottom of the header cells
    underline_border = Border(bottom=Side(style="thin"))

    # Iterate over all cells to apply left alignment
    for row in sheet.iter_rows(min_row=2, max_row=sheet.max_row, min_col=1, max_col=sheet.max_column):
        for cell in row:
            cell.alignment = alignment

    # Format headers (bold, cell underline, and left-align)
    for cell in sheet[1]:
        cell.font = header_font
        cell.alignment = alignment
        cell.border = underline_border  # Add the underline to the cell itself

    # Apply filters to the headers
    sheet.auto_filter.ref = sheet.dimensions
    
    # Save the workbook
    workbook.save(file_path)

# Call the function
save_df_with_formatting(df, file_path, sheet_name

import os
from openpyxl import Workbook

# File path of the workbook
file_path = 'example.xlsx'

# Check if the file exists
if os.path.exists(file_path):
    # If the file exists, delete it
    os.remove(file_path)
    print(f"{file_path} has been deleted.")
else:
    print(f"{file_path} does not exist.")

# Create a new workbook after deleting (if desired)
wb = Workbook()
wb.save(file_path)
print(f"New workbook created: {file_path}")
